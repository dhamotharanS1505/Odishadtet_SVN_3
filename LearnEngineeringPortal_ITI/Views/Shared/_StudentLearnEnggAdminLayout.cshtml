
<!DOCTYPE html>
<html lang="en">
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    @Styles.Render("~/Content/cssAdminLayout")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/JSAdminLayout")
    @RenderSection("scripts", required: false)


    @*<link href="../files/css/messages.css" rel="stylesheet">*@
    <link href="~/files/css/style-four.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css" integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.2/css/all.css" integrity="sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr" crossorigin="anonymous">
    @*<link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.1.1/css/responsive.bootstrap.min.css" crossorigin="anonymous">*@

    <title>ODISHA-DTET</title>

    <style>
        .navbar {
            border: none !important;
            margin-bottom: 0;
        }

        .header {
            border-bottom: none !important;
        }

        .navbar {
            border-radius: 0 !important;
        }

        body {
            font-family: "Roboto" !important;
            /* font-size: 1.5rem !important; 03/06/2025 avoid big font*/
        }

        .sidebar .navbar .brand-title {
            opacity: 1;
            transition: all 0.5s;
            padding-right: 0 !important;
        }

        .sub-textt {
            padding-left: 18px;
            opacity: 0.87;
        }

        .pt-2, .py-2 {
            padding-top: 1.5rem !important;
        }

        .sidebar.collapsed .navbar .toggle-sidebar {
            margin-right: 0px !important;
        }



        .dt-txt {
            border: 1px solid lightgray;
            width: 136px !important;
            margin-bottom: 5%;
            padding-bottom: 4px;
        }

        .dt-txt-span2 {
            padding-left: 0 !important;
        }

        .dt-txt-spn {
            padding: 1% 4% 3% 4%;
        }

        .dt-txt {
            border: 1px solid lightgray;
            width: 136px !important;
            margin-bottom: 5%;
            padding-bottom: 4px;
        }

        .dt-txt-spnn {
            padding: 1% 4% 3% 4%;
            border: 1px solid lightgray;
            font-size: 15px;
        }

        .newtheme {
            border-bottom: 1px solid #259dab;
            background-image: linear-gradient(to right, #259dab 0%, #2574ab 100%);
            background-color: #259dab;
        }

        #Studentdashboard {
            color: white;
        }

        #loading-screen {
            position: fixed;
            width: 100%;
            height: 100%;
            background: white;
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }

        .spinner {
            width: 50px;
            height: 50px;
            border: 5px solid rgba(0, 0, 0, 0.1);
            border-top: 5px solid #007bff;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

    </style>


    @*<link href='https://fonts.googleapis.com/css?family=Roboto' rel='stylesheet' type='text/css'>*@
    <link rel="icon" href="../favicon.ico" sizes="16x16" type="image/png">
    @*<script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js"></script>*@
    <script src="~/Scripts/ProjectScript/StudentCheckInProcess.js"></script>
</head>
<body>

    <div id="loading-screen">
        <div class="spinner">
        </div>
    </div>
    @{

        int cookieUserIdUserMaster = 0;
        int cookiecollegegrpId = 0;
        string cookieUserIdUserEmailId = "";
        long cookieUserIdUserMobileNo = 0;
        int cookieUniversityid = 0;
        string cookieUserName = "";
        string cookieUserImage = "";
        string cookieserverdate = "";
        string roledescription = "";
        int roleid = 0;
        string mapuniv = "";
        string collegeID = "";
        string rolelevel = "";
        int Department_ID = 0;
        string DepartmentName = "";
        string rollno = "";
        string stud_dob = "";
        string AcademicYear = "";  // AcademicYear
        string UserRole_type = "";
        string collegename = "";
        string CourseType = "";
        if (HttpContext.Current.Session["stdLoginUserID"] != null)
        {
            cookieUserIdUserMaster = Convert.ToInt32(HttpContext.Current.Session["stdLoginUserID"]);
            cookieUserIdUserEmailId = HttpContext.Current.Session["loginUserEmailID"].ToString();
            cookieUserIdUserMobileNo = Convert.ToInt64(HttpContext.Current.Session["loginUserMobileNumber"]);
            cookieUniversityid = Convert.ToInt32(HttpContext.Current.Session["loginUniversityID"]);
            cookieUserName = HttpContext.Current.Session["loginUserFullName"].ToString();
            cookieUserImage = HttpContext.Current.Session["ProfileImage"].ToString();
            cookieserverdate = HttpContext.Current.Session["ServerDate"].ToString();
            roleid = Convert.ToInt32(HttpContext.Current.Session["stdloginUserRoleID"]);
            roledescription = HttpContext.Current.Session["loginUserRoledescription"].ToString();
            mapuniv = HttpContext.Current.Session["MappedUniversities"].ToString();
            rolelevel = HttpContext.Current.Session["RoleLevel"].ToString();
            cookiecollegegrpId = Convert.ToInt32(HttpContext.Current.Session["logincollegegrpId"]);
            Department_ID = Convert.ToInt32(HttpContext.Current.Session["loginUserDepartmentID"]);
            DepartmentName = HttpContext.Current.Session["loginUserDepartmentName"].ToString();

            UserRole_type = HttpContext.Current.Session["loginUserUserRoletype"].ToString();
            stud_dob = HttpContext.Current.Session["loginUserdob"].ToString();
            AcademicYear = HttpContext.Current.Session["loginUserAcademicYear"].ToString();
            collegename = HttpContext.Current.Session["loginUserCollegeName"].ToString();
            rollno = HttpContext.Current.Session["loginUserroll_no"].ToString();
            CourseType = HttpContext.Current.Session["loginUserCourseType"].ToString();



        }
    }

    @Html.Hidden("sessionUniversityId", cookieUniversityid)
    @Html.Hidden("sessionUserId", cookieUserIdUserMaster)
    @Html.Hidden("sessionEmailID", cookieUserIdUserEmailId)
    @Html.Hidden("sessionMobileNumber", cookieUserIdUserMobileNo)
    @Html.Hidden("sessionUserName", cookieUserName)
    @Html.Hidden("sessionUserImage", cookieUserImage)
    @Html.Hidden("sessionserverdate", cookieserverdate)
    @Html.Hidden("sessionroleId", roleid)
    @Html.Hidden("sessionroledescription", roledescription)
    @Html.Hidden("sessionMappedUniv", mapuniv)
    @Html.Hidden("sessionrolelevel", rolelevel)
    @Html.Hidden("sessioncollegeID", collegeID)
    @Html.Hidden("sessioncollegeGrpID", cookiecollegegrpId)
    @Html.Hidden("sessionDepartment_ID", Department_ID)
    @Html.Hidden("sessionDepartmentName", DepartmentName)

    @Html.Hidden("sessionUserRoletype", UserRole_type)
    @Html.Hidden("sessiondob", stud_dob)
    @Html.Hidden("sessionAcademicYear", AcademicYear)
    @Html.Hidden("sessionCollegeName", collegename)
    @Html.Hidden("sessionroll_no", rollno)
    @Html.Hidden("sessionCourseType", CourseType)
    <section class="wrapper">

        <!-- SIDEBAR -->
        <aside class="sidebar">
            <nav class="navbar navbar-dark bg-primary" style="padding:0 5%;">
                <a class="navbar-brand m-0  brand-title" href="/Student/index"><img src="@Url.Content("../files/Images/learn_logo-02.png?V2")" style="width:140px;"></a>
                <span></span>
                <a class="navbar-brand py-2 material-icons toggle-sidebar" href="#">menu</a>
            </nav>

            <nav class="navigation">
                <ul>
                    @*<p class="left-mu"><b>Menu</b></p>

                        <li>
                            <a href="#"> <img class="left-mu-icon" src="@Url.Content("~/files/images/1_sys-01.png")"> <span class="sub-textt">Semester 1</span><span class="toogle-sub-nav material-icons">keyboard_arrow_right</span></a>
                            <ul class="sub-nav sub-nav1">
                                <li class="sub-sub-mu"><a class="sub-nav1" id="DashBoardMain" href="@Url.Action("DashBoardMain", "AdminDashBoard")"> DashBoard Main </a> </li>
                            </ul>
                        </li>*@

                    @*<li>
                            <a href="#"> <img class="left-mu-icon" src="@Url.Content("~/files/images/1_sys-01.png")"> <span class="sub-textt">Semester 2</span><span class="toogle-sub-nav material-icons">keyboard_arrow_right</span></a>
                            <ul class="sub-nav sub-nav1">
                                <li class="sub-sub-mu"><a class="sub-nav1" id="DashBoardMain" href="@Url.Action("DashBoardMain", "AdminDashBoard")"> DashBoard Main </a> </li>
                            </ul>
                        </li>

                        <li>
                            <a href="#"> <img class="left-mu-icon" src="@Url.Content("~/files/images/1_sys-01.png")"> <span class="sub-textt">Semester 3</span><span class="toogle-sub-nav material-icons">keyboard_arrow_right</span></a>
                            <ul class="sub-nav sub-nav1">
                                <li class="sub-sub-mu"><a class="sub-nav1" id="DashBoardMain" href="@Url.Action("DashBoardMain", "AdminDashBoard")"> DashBoard Main </a> </li>
                            </ul>
                        </li>*@

                </ul>
                <ul id="semcontainer"></ul>


            </nav>

        </aside>


        <!--RIGHT CONTENT AREA-->
        <div class="content-area">
            <header class="header sticky-top">

                <nav class="navbar navbar-light bg-white px-sm-4 newtheme">

                    <h5 class="mn-hd">ODISHA-DTET - Visual Learning Solution</h5>
                    <a class="navbar-brand py-2 d-md-none  m-0 material-icons toggle-sidebar" href="#">menu</a>
                    <ul class="navbar-nav flex-row ml-auto">
                        @*<li style="margin-top:17px;" id="DashboardHide">
                                <a id="Studentdashboard" href="../Student/Dashboard">
                                    <span class="sub-textt" style="color:white"> >>> Go to Dashboard</span>
                                </a>
                            </li>*@
                        <li style="margin-top:17px;" class="dropdown stdSessionokLoginedUser">
                            <a href="#" id="Studentdashboard"> >>> Go to DashBoard</a>
                            @*<a href="#" id="Studentdashboard"><img src="~/Content/img/BackArrow3.jpg" style="width:28px;" class=" mr-2 rounded" />Go to DashBoard</a>*@
                        </li>
                        <li class="nav-item ml-sm-3 user-logedin dropdown">
                            <a href="#" id="userLogedinDropdown" data-toggle="dropdown" class="nav-link weight-400 dropdown-toggle"><img src="@Url.Content("~/files/images/avtar4.png")" class="mr-2 rounded" width="28" style="box-shadow:0 2px 2px 2px rgba(0,0,0,0.1);"><span id="login-username" style="padding-left:3px; font-weight:500;"></span></a>
                            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="userLogedinDropdown">
                                <a class="dropdown-item" id="Viewstudentprofile" href="#">My Profile</a>
                                <div class="dropdown-divider"></div>
                                <a class="dropdown-item" id="btnstdLogout" href="#">Log Out</a>
                            </div>
                        </li>

                    </ul>
                </nav>
            </header>
            <!-- for registration div selection -->
            <input type="hidden" id="DivSelOption" value="1" />
            <div class="content-wrapper">
                @RenderBody()
            </div>


            <footer class="page-footer">
                <!-- Start Container -->
                <div class="ft_ltf_wap">
                    <div class="col-md-12 col-xs-12 copyright">
                        Powered by Infoplus Technologies Pvt. Ltd (Version: <b id="LatestVersion">4.0.0</b>)
                    </div>
                </div>
                <!-- End Container -->
            </footer>

        </div>



    </section>


</body>
</html>
<!--Working function-->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const toggleBtn = document.querySelector('.toggle-sidebar');
        const sidebar = document.querySelector('.sidebar');
        alert("D");
        toggleBtn.addEventListener('click', function (e) {
            e.preventDefault();
            sidebar.classList.toggle('collapsed');
        });
    });
</script>


<script>
    $(document).ready(function () {
        $("#login-username").text('Hi ' + $("#sessionUserName").val());

        var pathname = window.location.pathname; // Returns path only (/path/example.html)
        var lastURL = pathname.split("/");
        var backColor = "#1573F3";
       // var newobjlevel1 = "." + lastURL[1];
        var newobjlevel2 = $("#" + lastURL[2]);

        $(newobjlevel2).parents('li').toggleClass('open');
        $(newobjlevel2).css('background', backColor);

        if (lastURL[2] == "Dashboard") {
            $("#Studentdashboard").css("display", "none");
        }

        //if (lastURL[2] == "StudentSaveEndTime") {
        //    $("#Studentdashboard").css("display", "none");
        //}

        //setInterval(updateUserStatus, 30000); //Session maintain


        //New

        var idleTime = 0;
        var isVideoPlaying = false;

        // Check every minute
        setInterval(function () {
            // Only increment idle time if no video is playing
            if (!isVideoPlaying) {
                idleTime++;
            }

            if (idleTime >= 15) { // 15 minutes
                window.location.href = '/Account/Logout'; // your logout route
            }
        }, 60000); // 1 minute

        // Reset idle time on user interaction
        document.onmousemove = document.onkeypress = function () {
            idleTime = 0;
        };

        // Monitor all video elements
        document.addEventListener('DOMContentLoaded', function () {
            const videos = document.querySelectorAll('video');

            videos.forEach(function (video) {
                video.addEventListener('play', function () {
                    isVideoPlaying = true;
                });

                video.addEventListener('pause', function () {
                    isVideoPlaying = false;
                });

                video.addEventListener('ended', function () {
                    isVideoPlaying = false;
                });
            });
        });

        //New End

    });

    window.addEventListener("load", function () {
        document.getElementById("loading-screen").style.display = "none";
    });

       $(document).on('click', "#Studentdashboard", function () {
      // var roleid = '@Session["loginUserRoleID"]';
           window.location.href = "../Student/StudentSaveEndTime";
   });

    //Added for session



       function updateUserStatus() {
               $.ajax({
                   global: false,
                   type: 'GET', dataType: "json",
                   url: '/student/CheckWorkingStatus',
                   success: function (res) {
                       //alert(res);
                       if (res == -1) {
                           //e.preventDefault();
                           $.ajax({

                               url: Appendurl + "/Student/Logout",
                               type: 'Post',
                               success: function (Rdata) {

                                   if (Rdata == "") {
                                       //window.location.href = Rdata.ReturnUrl;

                                       $('.modelErrorTxt').hide();

                                       $("#sessionUserId").val(0);
                                       $("#loginUserName").text("Hi User");
                                       $(".stdSessionokLoginedUser").hide();
                                       $(".stdsignbutton").show();
                                       $(".registerbutton").show();
                                       window.location.href = "/Student/Index";
                                       //get wishlist count
                                       //get any cart added count
                                   }


                               }
                           });
                       }

                   }
               });
           }

    //End

    // JavaScript Document
    (function ($) {
        $.fn.countTo = function (options) {
            // merge the default plugin settings with the custom options
            options = $.extend({}, $.fn.countTo.defaults, options || {});

            // how many times to update the value, and how much to increment the value on each update
            var loops = Math.ceil(options.speed / options.refreshInterval),
                increment = (options.to - options.from) / loops;

            return $(this).each(function () {
                var _this = this,
                    loopCount = 0,
                    value = options.from,
                    interval = setInterval(updateTimer, options.refreshInterval);

                function updateTimer() {
                    value += increment;

                    loopCount++;
                    $(_this).html(value.toFixed(options.decimals));

                    if (typeof (options.onUpdate) == 'function') {
                        options.onUpdate.call(_this, value);
                    }

                    if (loopCount >= loops) {
                        clearInterval(interval);
                        value = options.to;

                        if (typeof (options.onComplete) == 'function') {
                            options.onComplete.call(_this, value);
                        }
                    }
                }
            });
        };

        $.fn.countTo.defaults = {
            from: 0,  // the number the element should start at
            to: 100,  // the number the element should end at
            speed: 1000,  // how long it should take to count between the target numbers
            refreshInterval: 100,  // how often the element should be updated
            decimals: 0,  // the number of decimal places to show
            onUpdate: null,  // callback method for every time the element is updated,
            onComplete: null,  // callback method for when the element finishes updating
        };
    })(jQuery);


    var disableclick = '';
    document.onmousedown = disableclick;

    // Disable right-click
    document.addEventListener("contextmenu", function (event) {
        //alert("Right click has disabled");
        event.preventDefault();
    });
    // Disable F12, Ctrl+Shift+I, Ctrl+Shift+J, Ctrl+U (View Source)
    document.addEventListener("keydown", function (event) {

        if (event.key === "F12") {
            //alert("F12 Key has disabled!");
            event.preventDefault();
        }
    });

</script>


@*
    <script src="~/files/js/daterangepicker.js"></script>*@
<script src="../files/js/utils.js"></script>
<script src="~/files/js/custom.js"></script>
<script src="~/files/js/dashboard.js"></script>
<script async="" src="~/files/js/js.js"></script>

